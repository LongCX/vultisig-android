package com.vultisig.wallet.data.models

import com.vultisig.wallet.data.models.Chain.BscChain

object CoinsTradeAsset {

    val SupportedCoins = listOf(
        CoinTradeAsset(
            chain = Chain.Bitcoin,
            ticker = "BTC",
            logo = "btc",
            address = "",
            decimal = 8,
            hexPublicKey = "",
            priceProviderID = "bitcoin",
            contractAddress = "",
            isNativeToken = true,
        ),
        CoinTradeAsset(
            chain = Chain.BitcoinCash,
            ticker = "BCH",
            logo = "bch",
            address = "",
            decimal = 8,
            hexPublicKey = "",
            priceProviderID = "bitcoin-cash",
            contractAddress = "",
            isNativeToken = true,
        ),
        CoinTradeAsset(
            chain = Chain.Litecoin,
            ticker = "LTC",
            logo = "ltc",
            address = "",
            decimal = 8,
            hexPublicKey = "",
            priceProviderID = "litecoin",
            contractAddress = "",
            isNativeToken = true,
        ),
        CoinTradeAsset(
            chain = Chain.ThorChain,
            ticker = "RUNE",
            logo = "rune",
            address = "",
            decimal = 8,
            hexPublicKey = "",
            priceProviderID = "thorchain",
            contractAddress = "",
            isNativeToken = true,
        ),
        CoinTradeAsset(
            chain = Chain.MayaChain,
            ticker = "CACAO",
            logo = "cacao",
            address = "",
            decimal = 10,
            hexPublicKey = "",
            priceProviderID = "cacao",
            contractAddress = "",
            isNativeToken = true,
        ),
        CoinTradeAsset(
            chain = Chain.MayaChain,
            ticker = "MAYA",
            logo = "maya",
            address = "",
            decimal = 4,
            hexPublicKey = "",
            priceProviderID = "maya",
            contractAddress = "",
            isNativeToken = false,
        ),
        CoinTradeAsset(
            chain = Chain.Ethereum,
            ticker = "ETH",
            logo = "eth",
            address = "",
            decimal = 18,
            hexPublicKey = "",
            priceProviderID = "ethereum",
            contractAddress = "",
            isNativeToken = true,
        ),
        CoinTradeAsset(
            chain = Chain.Ethereum,
            ticker = "USDC",
            logo = "usdc",
            address = "",
            decimal = 6,
            hexPublicKey = "",
            priceProviderID = "usd-coin",
            contractAddress = "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
            isNativeToken = false,
        ),
        CoinTradeAsset(
            chain = Chain.Ethereum,
            ticker = "USDT",
            logo = "usdt",
            address = "",
            decimal = 6,
            hexPublicKey = "",
            priceProviderID = "tether",
            contractAddress = "0xdAC17F958D2ee523a2206206994597C13D831ec7",
            isNativeToken = false,
        ),
        CoinTradeAsset(
            chain = Chain.Ethereum,
            ticker = "LINK",
            logo = "link",
            address = "",
            decimal = 18,
            hexPublicKey = "",
            priceProviderID = "chainlink",
            contractAddress = "0x514910771af9ca656af840dff83e8264ecf986ca",
            isNativeToken = false,
        ),
        CoinTradeAsset(
            chain = Chain.Ethereum,
            ticker = "FLIP",
            logo = "flip",
            address = "",
            decimal = 18,
            hexPublicKey = "",
            priceProviderID = "chainflip",
            contractAddress = "0x826180541412d574cf1336d22c0c0a287822678a",
            isNativeToken = false,
        ),
        CoinTradeAsset(
            chain = Chain.Ethereum,
            ticker = "TGT",
            logo = "tgt",
            address = "",
            decimal = 18,
            hexPublicKey = "",
            priceProviderID = "thorwallet",
            contractAddress = "0x108a850856Db3f85d0269a2693D896B394C80325",
            isNativeToken = false,
        ),
        CoinTradeAsset(
            chain = Chain.Ethereum,
            ticker = "DAI",
            logo = "dai",
            address = "",
            decimal = 18,
            hexPublicKey = "",
            priceProviderID = "dai",
            contractAddress = "0x6b175474e89094c44da98b954eedeac495271d0f",
            isNativeToken = false,
        ),
        CoinTradeAsset(
            chain = Chain.Ethereum,
            ticker = "WETH",
            logo = "weth",
            address = "",
            decimal = 18,
            hexPublicKey = "",
            priceProviderID = "weth",
            contractAddress = "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
            isNativeToken = false,
        ),
        CoinTradeAsset(
            chain = Chain.Avalanche,
            ticker = "USDC",
            logo = "usdc",
            address = "",
            decimal = 6,
            hexPublicKey = "",
            priceProviderID = "usd-coin",
            contractAddress = "0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e",
            isNativeToken = false,
        ),
        CoinTradeAsset(
            chain = Chain.Avalanche,
            ticker = "USDT",
            logo = "usdt",
            address = "",
            decimal = 6,
            hexPublicKey = "",
            priceProviderID = "",
            contractAddress = "0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7",
            isNativeToken = false,
        ),
        CoinTradeAsset(
            chain = BscChain,
            ticker = "BNB",
            logo = "bsc",
            address = "",
            decimal = 18,
            hexPublicKey = "",
            priceProviderID = "binancecoin",
            contractAddress = "",
            isNativeToken = true,
        ),
        CoinTradeAsset(
            chain = BscChain,
            ticker = "USDT",
            logo = "usdt",
            address = "",
            decimal = 18,
            hexPublicKey = "",
            priceProviderID = "tether",
            contractAddress = "0x55d398326f99059fF775485246999027B3197955",
            isNativeToken = false,
        ),
        CoinTradeAsset(
            chain = BscChain,
            ticker = "USDC",
            logo = "usdc",
            address = "",
            decimal = 18,
            hexPublicKey = "",
            priceProviderID = "usd-coin",
            contractAddress = "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
            isNativeToken = false,
        ),
    )

}